core :: module("../modules/core");

three :: struct {
    name: string;
};

two :: struct {
    next: ^three;
};

one :: struct {
    next: ^two;
};

c: three;

a: one;
a.next := address_of(b);

b: two;
b.next := address_of(c);

a_ptr := address_of(a);
core::assign_string(address_of(a_ptr.next.next.name), "hello world!", 13);

#run {
    core::print("a.next.next.name.data = %s\n", a_ptr.next.next.name.data);
};

vector3 :: struct {
    x: f32;
    y: f32;
    z: f32;
};

class  :: struct {
    name: string;
};

entity :: struct {
    pos: vector3;
    dir: vector3;
    cls: class;
};

barzar :: struct {
    e: ^entity;
    c: ^class;
};

#run {
    {
        bar: ^barzar := alloc(size_of(barzar));
        defer free(bar);

        bar.e := alloc(size_of(entity));
        defer free(bar.e);

        bar.c := alloc(size_of(class));
        defer free(bar.c);

        bar.e.pos.x := 1.3;
        bar.e.pos.y := 4.1;
        bar.e.pos.z := -33.2;

        core::assign_string(address_of(bar.c.name), "magicks class", 13);
        core::print("bar.c.name.data = %s\n", bar.c.name.data);
    };
};