core :: module("../modules/core");

MODE :: 2;

#assert true;
#assert MODE == 2;
//#assert 2 == 1;

#if MODE == 1 {
    core::print("mode 1\n");
} #elif MODE == 2 {
    core::print("mode 2\n");
} #else {
    core::print("unknown mode\n");
};

factorial :: proc(n: u64 := 12): u64 {
    r: u64 := 1;
    for i in range<u64>(1, n) {
        r *:= i;
    };
    return r;
};

fib :: proc(n: u64 := 10): u64 {
    if n == 0 || n == 1 {
        return n;
    } else {
        return fib((n - 1) + fib(n - 2));
    };
};

#run {
    result := fib(20);
    core::print("fib       := %llu\n", result);
    core::assert(result == 1, "fib expected 1");

    result := factorial();
    core::print("factorial := %llu\n", result);
    core::assert(result == 479001600, "factorial expected 479001600");
};
