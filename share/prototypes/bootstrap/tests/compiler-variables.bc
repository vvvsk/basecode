core :: module("../modules/core");

text: string;
core::assign_string(address_of(text), "hello world!", 12);
content := text.data;
i: u32 := 0;

vector3 :: struct {
    x: s32;
    y: s32;
    z: s32;
};

class  :: struct {
    name: string;
};

entity :: struct {
    pos: vector3;
    dir: vector3;
    cls: class;
};

foo :: proc(a, b, c: f32): f32 {
    return (a + b + c) * i;  // this references a module level variable
};

#run {
    gg := foo(1.2, 2.1, 3.1);

    core::print("text.length   := %d\n",    text.length);
    core::print("text.capacity := %d\n",    text.capacity);
    core::print("text.data     := $%08x\n", text.data);
    core::print("content       := $%08x\n", content);

    while i < text.length {
        core::print("%c", content^);
        content +:= 1;
        i +:= 1;
    };

    {
        content := text.data;
        for i in range<u32>(0, text.length, kind := core::ranges::kinds::EXCLUSIVE) {
            core::print("%c", content^);
            content +:= 1;
        };
    };

    core::print("\n");

    player: entity;
    player.pos.x := 10;
    player.pos.y := 5;
    player.pos.z := -6;

    core::print("player.pos.x := %d\n", player.pos.x);
    core::print("player.pos.y := %d\n", player.pos.y);
    core::print("player.pos.z := %hhd\n", player.pos.z);

    core::print("player.dir.x := %d\n", player.dir.x);
    core::print("player.dir.y := %d\n", player.dir.y);
    core::print("player.dir.z := %d\n", player.dir.z);

//    player.cls.name := text;
    core::print("player.cls.name.length   := %d\n", player.cls.name.length);
    core::print("player.cls.name.capacity := %d\n", player.cls.name.capacity);

    player_ptr: ^entity := address_of(player);

    core::print("before: player_ptr.pos.x := %d\n", player_ptr.pos.x);
    core::print("before: player_ptr.pos.y := %d\n", player_ptr.pos.y);
    core::print("before: player_ptr.pos.z := %hhd\n", player_ptr.pos.z);

    player_ptr.pos.x := 100;
    player_ptr.pos.y := 55;
    player_ptr.pos.z := -106;

    core::print("after: player_ptr.pos.x := %d\n", player_ptr.pos.x);
    core::print("after: player_ptr.pos.y := %d\n", player_ptr.pos.y);
    core::print("after: player_ptr.pos.z := %hhd\n", player_ptr.pos.z);
};